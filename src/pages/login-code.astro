---
import { stytch, isLoggedIn } from "../lib/stytch";
import { SESSION_DURATION_MINUTES } from "../lib/constants";
import { StytchError } from "stytch";
import Layout from "../layouts/Layout.astro";

// Initialize error state
const errors = { code: "", general: "", email: "" };

// Extract method_id from the URL
const url = new URL(Astro.request.url);
let method_id = url.searchParams.get("method_id");
const user_exists = url.searchParams.get("user_exists");

// Handle POST request for both OTP submission and resend OTP request
if (Astro.request.method === "POST") {
  const data = await Astro.request.formData();
  const code = data.get("otp-input")?.toString();

  // Validate the code and method_id
  if (!code || !/^[0-9]+$/.test(code)) {
    errors.code = "Code is not valid.";
    return;
  }
  if (!method_id) {
    errors.code = "Method ID is not valid.";
    return;
  }

  try {
    // Make stytchclient API call to authenticate OTP
    const resp = await stytch.otps.authenticate({
      code,
      method_id,
      session_duration_minutes: SESSION_DURATION_MINUTES,
    });

    if (!resp.session_token) {
      errors.code = "Failed to authenticate. Please try again.";
      return;
    }

    // Set session cookie
    Astro.cookies.set("gp_session_token", resp.session_token, {
      path: "/",
      httpOnly: true,
      secure: true,
      sameSite: "lax",
      expires: new Date(Date.now() + SESSION_DURATION_MINUTES * 60 * 1000),
    });

    const message = encodeURIComponent("You are now logged in");
    return Astro.redirect(`/?message=${message}#basket`);
  } catch (error) {
    console.error(error);

    // Check if the error is of type StytchError and has a specific error type
    if (
      error instanceof StytchError &&
      error.error_type === "otp_code_not_found"
    ) {
      errors.code = "Oops, wrong passcode. Try again or request a new one.";
    } else {
      // Handle other types of errors
      errors.code = "Unknown error, please reach out to us for help!";
    }
  }
}

// Redirect authenticated users away from login page
const sessionToken = Astro.cookies.get("gp_session_token")?.value;
const isUserLoggedIn = sessionToken && !!(await isLoggedIn(sessionToken));

if (isUserLoggedIn) {
  return Astro.redirect(
    "/?message=" + encodeURIComponent("You are already logged in"),
  );
}
---

<Layout>
  <div class="flex items-center justify-center h-screen bg-gray-100">
    <div class="bg-white p-8 rounded shadow-md w-full max-w-sm">
      <h2 class="text-2xl font-bold text-gray-900 mb-6 text-center">
        Check your email!
      </h2>
      {
        user_exists ? (
          <p class="text-sm text-gray-600 mb-6 text-center">
            It looks like you already have an account, please enter the code to
            log in.
          </p>
        ) : (
          <p class="text-sm text-gray-600 mb-6 text-center">
            We have sent a code to your email address. Please enter it below.
          </p>
        )
      }

      <!-- OTP Verification Form -->
      <form method="POST" id="otp-form">
        {
          errors.general && (
            <p class="mb-4 text-sm font-medium text-red-600 bg-red-50 p-2 rounded border border-red-500">
              {errors.general}
            </p>
          )
        }
        <label
          for="otp-input"
          class=`block text-sm font-medium text-gray-700 ${errors.code ? 'text-red-700' : 'text-gray-700'}`
          >Enter OTP:</label
        >
        <input
          class=`border rounded-md p-2 w-full mb-4 
            ${errors.code ? 'bg-red-50 border-red-500 placeholder-red-700 focus:ring-red-500 focus:border-red-500 !m-0' : '' }`
          id="otp-input"
          name="otp-input"
          autocomplete="one-time-code"
          inputmode="numeric"
          pattern="[0-9]*"
          required
        />
        {
          errors.code && (
            <p
              id="login-code-error"
              class="my-2 text-sm font-medium text-red-600"
            >
              {errors.code}
            </p>
          )
        }
        <button
          class="bg-blue-500 text-white rounded-md p-2 w-full mb-2 hover:bg-blue-600"
          id="submit-login-code-btn"
          type="submit">Submit</button
        >
      </form>

      <!-- Resend OTP -->
      <p class="mt-6 text-sm text-center text-gray-600" id="resend-text">
        Didn't receive the code?
        <a
          id="resend-button"
          class="text-orange-500 hover:underline"
          type="submit"
          href="/login?resend=true"
        >
          Resend code
        </a>
      </p>
    </div>
  </div>
</Layout>
