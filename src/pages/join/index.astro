---
import { StytchError } from "stytch";
import { stytch, isLoggedIn } from "../../lib/stytch";
import AuthLayout from "../../layouts/AuthLayout.astro";
import { TextInput } from "src/components/solid/TextInput";
import { CONFIRMED_ZIPCODES } from "../../lib/constants";

const errors = { email: "" };
let email;

if (Astro.request.method === "POST") {
  try {
    const data = await Astro.request.formData();
    email = data.get("email")?.toString();
    const zipcode = data.get("zipcode")?.toString();

    if (!email) {
      errors.email = "Email is required";
    } else if (!zipcode) {
      errors.email = "ZIP code is required";
    } else if (zipcode && !CONFIRMED_ZIPCODES.includes(zipcode)) {
      return Astro.redirect(
        `/waitlist?zipcode=${zipcode}&email=${encodeURIComponent(email)}`,
      );
    } else {
      try {
        const response = await stytch.otps.email.loginOrCreate({
          email,
          expiration_minutes: 10,
        });

        console.log(response);

        if (response.user_created) {
          // New user created, proceed with signup
          return Astro.redirect(
            "/join/code?method_id=" +
              response.email_id +
              "&email=" +
              encodeURIComponent(email),
          );
        } else {
          // User already exists, redirect to login-code with a message
          return Astro.redirect(
            "/login-code?method_id=" +
              response.email_id +
              "&user_exists=true" +
              "&email=" +
              encodeURIComponent(email),
          );
        }
      } catch (error) {
        console.log(error);
        if (error instanceof StytchError) {
          errors.email = error.message;
        } else {
          errors.email = "Something went wrong, please try again later";
        }
      }
    }
  } catch (error) {
    if (error instanceof Error) {
      console.error(error.message);
    }
  }
}

// Redirect authenticated users away from join page
const sessionToken = Astro.cookies.get("gp_session_token")?.value;
const isUserLoggedIn = sessionToken && !!(await isLoggedIn(sessionToken));

if (isUserLoggedIn) {
  return Astro.redirect("/join/personal-info");
}
---

<AuthLayout title="Goodpluck">
  <form method="POST">
    <h1 class="text-3xl mt-4 mb-4 font-semibold text-gray-900 text-center">
      Let's confirm that we deliver to your neighborhood
    </h1>
    <p class="text-center mb-10">
      We currently deliver to Detroit and the neighboring areas
    </p>

    <TextInput
      label="Zip code"
      type="text"
      name="zipcode"
      pattern="^[0-9]{5}(-[0-9]{4})?$"
      placeholder="Enter zip"
      required
    />
    <TextInput
      label="Enter your email to create an acount"
      type="email"
      name="email"
      placeholder="kale@example.com"
      required
      value={email}
    />

    {errors.email && <p class="text-red-400">{errors.email}</p>}
    <button
      class="px-6 py-4 mt-6 w-full bg-brand-yellow border-2 border-black text-center rounded shadow-md hover:bg-yellow-400"
      id="submit-join-code-btn"
      type="submit">Continue</button
    >
  </form>
  <p class="mt-6 text-center text-gray-600">
    Already have an account? <a
      href="/login"
      class="text-orange-500 hover:underline">Sign in</a
    >
  </p>
</AuthLayout>
