---
import { stytch } from "../../lib/stytch";
import { SESSION_DURATION_MINUTES } from "../../lib/constants";
import { StytchError } from "stytch";
import { swell } from "../../lib/swell";
import Layout from "../../layouts/Layout.astro";

// Initialize error state
const errors = { code: "" };

const url = new URL(Astro.request.url);
const method_id = url.searchParams.get("method_id");

// Handle POST request
if (Astro.request.method === "POST") {
  try {
    // Collect form data and initialize params object
    const data = await Astro.request.formData();
    const code = data.get("otp-input")?.toString();

    // Validate email
    if (!code || !/^[0-9]{6}$/.test(code)) {
      errors.code = `Code is not valid: ${code}`;
    } else if (!method_id) {
      errors.code = `Method ID is not valid`;
    } else {
      // Make stytch API call and handle errors within the same try-catch block
      try {
        const resp = await stytch.otps.authenticate({
          code,
          method_id,
          session_duration_minutes: SESSION_DURATION_MINUTES,
        });

        if (resp.session_token) {
          // Set session cookie
          Astro.cookies.set("gp_session_token", resp.session_token, {
            path: "/",
            httpOnly: true,
            secure: true,
            sameSite: "lax",
            expires: new Date(
              Date.now() + SESSION_DURATION_MINUTES * 60 * 1000,
            ),
          });
        }

        console.log(resp);
        return Astro.redirect("/join/personal-info");
      } catch (err) {
        console.log(err);
        if (err instanceof StytchError) {
          if (err.error_type === "otp_code_not_found") {
            errors.code =
              "Oops, wrong passcode. Try again or request a new one!";
          } else {
            errors.code = "Unknown error, please reach out to us for help!";
          }
        }
      }
    }
  } catch (error) {
    if (error instanceof Error) {
      console.error(error.message);
    }
  }
}

// Redirect authenticated users away from join page
const sessionToken = Astro.cookies.get("gp_session_token")?.value;
const session = sessionToken
  ? await stytch.sessions.authenticate({
      session_token: sessionToken,
    })
  : null;

if (session) {
  const email = session.user.emails[0]?.email;
  const account = await swell.get(`/accounts/${email}`);

  if (!account) {
    return Astro.redirect("/join/personal-info");
  } else if (
    !account.billing?.card ||
    Object.keys(account.billing?.card).length === 0
  ) {
    return Astro.redirect("/join/payment-info");
  } else {
    return Astro.redirect(
      "/?message=" + encodeURIComponent("You are already logged in"),
    );
  }
}

if (!method_id) {
  return Astro.redirect("/join");
}
---

<Layout title="Goodpluck">
  <div class="flex flex-col py-40 w-full sm:w-[400px] mx-auto">
    <h1 class="text-4xl font-bold text-gray-900 mb-6 text-center">
      Check your email!
    </h1>
    <p class="py-4 text-center w-40 mx-auto">We sent a code to your email</p>
    <form method="POST" class="w-60 mx-auto py-8">
      <label for="otp-input">Enter code</label>
      <input
        class="border rounded-md p-2 w-full mb-4 text-2xl"
        id="otp-input"
        name="otp-input"
        autocomplete="one-time-code"
        inputmode="numeric"
        pattern="[0-9]*"
        required
      />
      {errors.code && <p>{errors.code}</p>}
      <button
        class="px-6 py-4 w-full mt-8 bg-brand-yellow border-2 border-black text-center font-bold rounded shadow-md hover:bg-yellow-400 focus:shadow-md focus:top-[1px] focus:left-[1px] transition ease-in duration-50"
        id="submit-join-code-btn"
        type="submit">Verify Email</button
      >
    </form>
  </div>
</Layout>
