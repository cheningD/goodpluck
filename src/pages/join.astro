---
import Layout from "@layouts/Layout.astro";
---

<Layout>
  <div class="flex items-center justify-center h-screen bg-gray-100">
    <div class="bg-white p-8 rounded shadow-md w-full max-w-sm">
      <h2 class="text-2xl font-bold text-gray-900 mb-6 text-center">
        Join Goodpluck
      </h2>
      <p class="mb-6">
        We first want to make sure we can deliver our great products to you.
      </p>
      <form method="POST" id="signupForm">
        <label for="email" class="block text-sm font-medium text-gray-700 mb-2">
          Email
        </label>
        <input
          type="email"
          id="email"
          name="email"
          placeholder="kale@example.com"
          required
          class="border rounded-md p-2 w-full mb-4"
        />

        <!-- Password Field -->
        <label
          for="password"
          class="block text-sm font-medium text-gray-700 mb-2"
        >
          Password
        </label>
        <input
          type="password"
          id="password"
          name="password"
          placeholder="tomato3-Mushrooms!"
          required
          class="border rounded-md p-2 w-full mb-4"
        />

        <!-- Zipcode Field -->
        <label
          for="zipcode"
          class="block text-sm font-medium text-gray-700 mb-2"
        >
          ZIP Code
        </label>
        <input
          type="text"
          id="zipcode"
          name="zipcode"
          pattern="^[0-9]{5}(-[0-9]{4})?$"
          placeholder="48201"
          required
          class="border rounded-md p-2 w-full mb-4"
          title="Enter a 5-digit ZIP code or a 9-digit ZIP+4 code."
          maxlength="10"
        />

        <p class="text-red-400" id="error"></p>

        <button
          class="bg-blue-500 text-white rounded-md p-2 w-full mb-2 hover:bg-blue-600"
        >
          Continue
        </button>
      </form>
      <p class="mt-6 text-sm text-center text-gray-600">
        You already have an account? <a
          href="/login"
          class="text-orange-500 hover:underline"
        >
          Log in
        </a>
      </p>
    </div>
  </div>

  <script>
    import { getSwellClient } from "../lib/swell";
    import { confirmed_zipcodes } from "../lib/constants";

    const swell = getSwellClient(
      import.meta.env.PUBLIC_SWELL_STORE_ID,
      import.meta.env.PUBLIC_SWELL_PUBLIC_KEY,
    );

    // TODO: Update to redirect before page loads
    const checkLoginStatus = async () => {
      const loggedInUser = await swell.account.get();

      if (loggedInUser) {
        window.location.href =
          "/?message=" + encodeURIComponent("You are already logged in.");
      }
    };

    checkLoginStatus();

    document.addEventListener("DOMContentLoaded", () => {
      const form = document.getElementById("signupForm") as HTMLFormElement;
      const errorElement = document.getElementById("error");

      if (!form || !errorElement) {
        return;
      }

      form.addEventListener("submit", async (event) => {
        event.preventDefault();
        errorElement.textContent = "";

        const formData = new FormData(form);

        let email = formData.get("email") as string;
        let password = formData.get("password") as string;
        let zipcode = formData.get("zipcode") as string;

        if (!email) {
          displayError("Invalid email address.");
          return;
        }
        if (!password) {
          displayError("Password is required.");
          return;
        }
        if (!zipcode || !confirmed_zipcodes.includes(zipcode)) {
          window.location.href =
            "/waitlist?zipcode=" +
            zipcode +
            "&email=" +
            encodeURIComponent(email);
        }

        try {
          const createAccountResp = await swell.account.create({
            email,
            password,
            type: "individual",
          });

          console.log("Create account: ", createAccountResp);

          if (createAccountResp.id) {
            const loginResp = await swell.account.login(email, password);
            console.log("Login: ", loginResp);
            const loggedInUser = await swell.account.get();
            if (loggedInUser) {
              const sessionCookie = swell.session.getCookie();
              localStorage.setItem("swell_session_token", sessionCookie);
              window.location.href =
                "/create-account?email=" + encodeURIComponent(email);
            } else {
              displayError("An error occurred. Please try again later.");
            }
          }

          // TODO: Login user in if account already exists
        } catch (error) {
          displayError("An error occurred. Please try again later.");
          console.error(error);
        }
      });

      const displayError = (message: string) => {
        errorElement.textContent = message;
      };
    });
  </script>
</Layout>
