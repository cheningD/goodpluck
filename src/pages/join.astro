---
import { StytchError } from "stytch";
import { getStytchClient, isLoggedIn } from "../lib/stytch";
import Layout from "@layouts/Layout.astro";
import { confirmed_zipcodes } from "../lib/constants";

const errors = { email: "" };
let email;

const runtime = Astro.locals.runtime;
const { STYTCH_PROJECT_ID, STYTCH_PROJECT_SECRET } =
  runtime?.env || import.meta.env;

if (Astro.request.method === "POST") {
  try {
    const data = await Astro.request.formData();
    email = data.get("email")?.toString();
    const zipcode = data.get("zipcode")?.toString();

    if (!email) {
      errors.email = "Email is required";
    } else if (!zipcode) {
      errors.email = "ZIP code is required";
    } else if (zipcode && !confirmed_zipcodes.includes(zipcode)) {
      return Astro.redirect("/waitlist?zipcode=" + zipcode);
    } else {
      try {
        const stytchclient = getStytchClient(
          STYTCH_PROJECT_ID,
          STYTCH_PROJECT_SECRET,
        );

        const response = await stytchclient.otps.email.loginOrCreate({
          email,
          expiration_minutes: 10,
        });

        console.log(response);

        if (response.user_created) {
          // New user created, proceed with signup
          return Astro.redirect("/signup-code?method_id=" + response.email_id);
        } else {
          // User already exists, redirect to login-code with a message
          return Astro.redirect(
            "/login-code?method_id=" + response.email_id + "&user_exists=true",
          );
        }
      } catch (error) {
        console.log(error);
        if (error instanceof StytchError) {
          errors.email = error.message;
        } else {
          errors.email = "Something went wrong, please try again later";
        }
      }
    }
  } catch (error) {
    if (error instanceof Error) {
      console.error(error.message);
    }
  }
}

// Redirect authenticated users away from join page
const sessionToken = Astro.cookies.get("gp_session_token")?.value;
const isUserLoggedIn = await isLoggedIn(
  sessionToken as string,
  STYTCH_PROJECT_ID,
  STYTCH_PROJECT_SECRET,
);

if (isUserLoggedIn) {
  return Astro.redirect(
    "/?message=" + encodeURIComponent("You are already logged in"),
  );
}
---

<Layout>
  <div class="flex items-center justify-center h-screen bg-gray-100">
    <div class="bg-white p-8 rounded shadow-md w-full max-w-sm">
      <h2 class="text-2xl font-bold text-gray-900 mb-6 text-center">
        Join Goodpluck
      </h2>
      <p class="mb-6">
        We first want to make sure we can deliver our great products to you.
      </p>
      <form method="POST">
        <label for="email" class="block text-sm font-medium text-gray-700 mb-2"
          >Your email</label
        >
        <input
          type="email"
          id="email"
          name="email"
          placeholder="kale@example.com"
          required
          class="border rounded-md p-2 w-full mb-4"
          value={email}
        />
        <label
          for="zipcode"
          class="block text-sm font-medium text-gray-700 mb-2"
          >Your ZIP code</label
        >
        <input
          type="text"
          id="zipcode"
          name="zipcode"
          pattern="^[0-9]{5}(-[0-9]{4})?$"
          placeholder="48201"
          required
          class="border rounded-md p-2 w-full mb-4"
          title="Enter a 5-digit ZIP code or a 9-digit ZIP+4 code."
          maxlength="10"
        />
        {errors.email && <p class="text-red-400">{errors.email}</p>}
        <button
          class="bg-blue-500 text-white rounded-md p-2 w-full mb-2 hover:bg-blue-600"
          >Continue</button
        >
      </form>
      <p class="mt-6 text-sm text-center text-gray-600">
        You already have an account? <a
          href="/login"
          class="text-orange-500 hover:underline">Log in</a
        >
      </p>
    </div>
  </div>
</Layout>
