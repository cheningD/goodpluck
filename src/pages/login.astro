---
import { StytchError } from "stytch";
import { stytch, isLoggedIn } from "../lib/stytch";
import AuthLayout from "../layouts/AuthLayout.astro";

// Initialize error state
const errors = { email: "", general: "" };

// Handle POST request
if (Astro.request.method === "POST") {
  const data = await Astro.request.formData();
  const email = data.get("email")?.toString();

  // Validate email
  if (typeof email !== "string") {
    errors.email = "Email is not valid.";
    return; // Stop execution if the email is invalid
  }

  try {
    //@ts-expect-error
    const resp = await stytch.otps.email.send({
      email,
      expiration_minutes: 10,
    });
    return Astro.redirect(
      "/login-code?method_id=" +
        resp.email_id +
        "&email=" +
        encodeURIComponent(email),
    );
  } catch (err) {
    console.error(err);
    if (err instanceof StytchError && err.error_type === "email_not_found") {
      errors.email = "Email not found. Do you need to create an account?";
    } else if (err instanceof Error) {
      errors.general =
        "A network error or unexpected issue occurred, please try again later.";
    } else {
      errors.general = `Unexpected error occurred, please try again later.`;
    }
  }
}

// Redirect authenticated users away from login page
const sessionToken = Astro.cookies.get("gp_session_token")?.value;
const isUserLoggedIn = sessionToken && !!(await isLoggedIn(sessionToken));

if (isUserLoggedIn) {
  return Astro.redirect(
    "/?message=" + encodeURIComponent("You are already logged in"),
  );
}
---

<AuthLayout title="Goodpluck">
  <form method="POST">
    <h1 class="text-3xl mt-4 mb-4 font-semibold text-gray-900 text-center">
      Sign In
    </h1>
    <p class="text-center mb-10">Welcome back, neighbor!</p>

    <label
      for="email"
      class={`block text-sm font-medium mb-2 ${
        errors.email ? "text-red-700" : "text-gray-700"
      }`}
    >
    </label>
    <input
      type="email"
      id="email"
      name="email"
      placeholder="eater@email.com"
      required
      class={`border rounded-md p-2 w-full mb-4 ${
        errors.email
          ? "bg-red-50 border-red-500 placeholder-red-700 focus:ring-red-500 focus:border-red-500 !mb-0"
          : ""
      }`}
    />
    {errors.email && <p class="text-red-400">Oops! {errors.email}</p>}
    {errors.general && <p class="text-red-400">{errors.general}</p>}
    <button
      data-testid="login-btn"
      class="px-6 py-4 mt-6 w-full bg-brand-yellow border-2 border-black text-center rounded shadow-md hover:bg-yellow-400"
      >Sign In With Email
    </button>
  </form>
  <p class="mt-6 text-center text-gray-600">
    New here? <a href="/join" class="text-orange-500 hover:underline"
      >Create an account</a
    >
  </p>
</AuthLayout>
