---
import Layout from "@layouts/Layout.astro";
import { swell } from "../../lib/swell";
import Breadcrumbs from "@components/solid/Breadcrumbs";
import ProductCartActions from "@components/solid/ProductCartActions";
import ProductInfoTabs from "@components/solid/ProductInfoTabs";
import type { GoodpluckProduct, WeightOption } from "@src/lib/types";

const { slug } = Astro.params;

const product: GoodpluckProduct = await swell.get(`/products/${slug}`);

if (!product) {
  return Astro.redirect("/404");
}

const categories = (
  await swell.get("/categories", {
    limit: 100,
    page: 1,
  })
).results;

const { name: productName, category_index } = product;
const cost = product.cost?.toFixed(2);
const productImage = product.images?.[0]?.file?.url ?? "";
const currentCollection = await swell.get("/categories/{id}", {
  id: category_index?.id?.at(1),
});

const weightOptions = product.options?.find(
  (option) => option.name === "Weight",
)?.values;

// just an example of how you might use this for a product
const productInfo = [
  {
    title: "Rich in Vitamin C",
    content:
      "Mandarins are a good source of vitamin C, which is essential for a healthy immune system. Vitamin C also acts as an antioxidant.",
  },
  {
    title: "Dietary Fiber",
    content:
      "Fiber helps prevent constipation, promotes regular bowel movements, and can contribute to a feeling of fullness, potentially aiding in weight management.",
  },
  {
    title: "Antioxidant Properties",
    content:
      "Mandarins contain various antioxidants, such as flavonoids and carotenoids, which can help neutralize harmful free radicals in the body.",
  },
];

// @ts-expect-error - not sure why Swell's Product type doesn't include vendor_id
const vendor = await swell.get(`/accounts/${product?.vendor_id}`);
---

<Layout
  title={`${productName}`}
  description="Delivered farm fresh to you"
  categories={categories}
>
  <article
    id="product-details-container"
    class="p-8 flex flex-col items-center"
  >
    <nav id="navigation-breadcrumbs" class="mb-6">
      {
        currentCollection && (
          <Breadcrumbs
            categories={categories}
            collectionId={currentCollection.id}
            product={product}
            client:load
          />
        )
      }
    </nav>

    <h1
      id="product-title"
      class="font-extrabold text-brand-green text-5xl mb-12"
    >
      {productName}
    </h1>

    <section
      id="product-facts"
      class="flex flex-col md:flex-row align-middle mb-12"
    >
      {
        productInfo.map(({ title, content }) => (
          <div class="py-12 px-4 md:py-4 md:px-12 text-center border-b md:border-r md:border-b-0 border-brand-yellow product-info-card last:border-none">
            <h2 class="font-bold text-2xl mb-3 text-brand-black">{title}</h2>
            <p class="text-base font-light text-custom-gray">{content}</p>
          </div>
        ))
      }
    </section>

    <figure id="product-visuals" class="w-full mb-12">
      <img
        alt={`Image of ${productName}`}
        src={productImage}
        loading="lazy"
        decoding="async"
        class="object-cover w-full h-[400px] rounded-md"
      />
    </figure>

    <ProductCartActions
      options={weightOptions as WeightOption[]}
      cost={cost}
      client:visible
    />

    <ProductInfoTabs vendor={vendor} product={product} client:visible />
  </article>
</Layout>
